import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
const _excluded = ["onChange", "defaultValue"];
import * as React from "react";
import Stepper from "./Stepper";
import validateIncrement from "../utils/validateIncrement";
import validateDecrement from "../utils/validateDecrement";
import useStateWithCallback from "../hooks/useStateWithCallback";

const BaggageStepper = _ref => {
  let {
    onChange,
    defaultValue = 0
  } = _ref,
      props = _objectWithoutProperties(_ref, _excluded);

  const [value, setValue] = useStateWithCallback(defaultValue, onChange);

  const incrementCounter = () => {
    const {
      maxValue = Number.POSITIVE_INFINITY,
      step = 1
    } = props;
    setValue(validateIncrement({
      value,
      maxValue,
      step
    }));
  };

  const decrementCounter = () => {
    const {
      minValue = Number.NEGATIVE_INFINITY,
      step = 1
    } = props;
    setValue(validateDecrement({
      value,
      minValue,
      step
    }));
  };

  const handleKeyDown = ev => {
    if (ev.keyCode === 40) {
      ev.preventDefault();
      decrementCounter();
    }

    if (ev.keyCode === 38) {
      ev.preventDefault();
      incrementCounter();
    }
  };

  const {
    onBlur,
    onFocus,
    disabled,
    name,
    id,
    selected,
    dataTest,
    minValue,
    maxValue,
    titleIncrement,
    titleDecrement
  } = props;
  return /*#__PURE__*/React.createElement(Stepper, {
    id: id,
    disabled: disabled,
    dataTest: dataTest,
    value: value,
    name: name,
    selected: selected,
    minValue: minValue,
    maxValue: maxValue,
    onKeyDown: handleKeyDown,
    onBlur: onBlur,
    onFocus: onFocus,
    onIncrement: incrementCounter,
    onDecrement: decrementCounter,
    titleIncrement: titleIncrement,
    titleDecrement: titleDecrement
  });
};

export default BaggageStepper;