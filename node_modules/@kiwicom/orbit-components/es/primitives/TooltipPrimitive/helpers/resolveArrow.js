import { css } from "styled-components";
export const resolveColor = ({
  error,
  help,
  theme
}) => {
  if (error) return theme.orbit.paletteRedNormal;
  if (help) return theme.orbit.paletteBlueNormal;
  return theme.orbit.paletteInkNormal;
};
const BORDER_SIZE = 6;
export const resolveArrowPlacement = ({
  placement,
  theme
}) => {
  const horizontalPlacement = theme.rtl ? `${BORDER_SIZE}px` : `-${BORDER_SIZE}px`;

  if (placement) {
    if (placement.includes("top")) {
      return css(["left:", ";bottom:0;"], horizontalPlacement);
    }

    if (placement.includes("left")) {
      return css(["top:-", "px;right:", ";"], BORDER_SIZE, theme.rtl ? `-${BORDER_SIZE}px` : `1px`);
    }

    if (placement.includes("right")) {
      return css(["top:-", "px;left:", ";"], BORDER_SIZE, theme.rtl ? `0px` : `-${BORDER_SIZE}px`);
    }

    return css(["left:", ";top:-", "px;"], horizontalPlacement, BORDER_SIZE);
  }

  return null;
};
export const resolveArrowStyle = ({
  placement,
  theme,
  error,
  help
}) => {
  if (placement) {
    if (placement.includes("top")) {
      return css(["border-width:", "px ", "px 0 ", "px;border-color:", " transparent transparent transparent;"], BORDER_SIZE, BORDER_SIZE, BORDER_SIZE, resolveColor({
        theme,
        error,
        help
      }));
    }

    if (placement.includes("left")) {
      return css(["border-width:", "px 0 ", "px ", "px;border-color:transparent transparent transparent ", ";"], BORDER_SIZE, BORDER_SIZE, BORDER_SIZE, resolveColor({
        theme,
        error,
        help
      }));
    }

    if (placement.includes("right")) {
      return css(["border-width:", "px ", "px ", "px 0;border-color:transparent ", " transparent transparent;"], BORDER_SIZE, BORDER_SIZE, BORDER_SIZE, resolveColor({
        theme,
        error,
        help
      }));
    }

    return css(["border-width:0 ", "px ", "px ", "px;border-color:transparent transparent ", " transparent;"], BORDER_SIZE, BORDER_SIZE, BORDER_SIZE, resolveColor({
      theme,
      error,
      help
    }));
  }

  return null;
};