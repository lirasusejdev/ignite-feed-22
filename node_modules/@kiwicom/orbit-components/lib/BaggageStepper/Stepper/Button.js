"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var React = _interopRequireWildcard(require("react"));

var _consts = require("../../primitives/ButtonPrimitive/common/consts");

var _getBoxShadow = _interopRequireDefault(require("./helpers/getBoxShadow"));

var _getPadding = _interopRequireDefault(require("../../primitives/ButtonPrimitive/common/getPadding"));

var _useTheme = _interopRequireDefault(require("../../hooks/useTheme"));

var _ButtonPrimitive = _interopRequireDefault(require("../../primitives/ButtonPrimitive"));

var _consts2 = require("./consts");

const _excluded = ["selected", "iconLeft", "iconRight", "disabled", "height", "width", "children"];

const Button = _ref => {
  let {
    selected,
    iconLeft,
    iconRight,
    disabled,
    height = _consts2.BUTTON_SIZE,
    width = _consts2.BUTTON_SIZE,
    children
  } = _ref,
      props = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  const theme = (0, _useTheme.default)();
  const onlyIcon = Boolean(iconLeft && !children);
  const padding = (0, _getPadding.default)(onlyIcon, iconRight, iconLeft, "small", theme);

  const wrappedBoxShadow = state => (0, _getBoxShadow.default)({
    state,
    disabled,
    theme,
    selected
  });

  const boxShadow = {
    boxShadow: wrappedBoxShadow(_consts.BUTTON_STATES.DEFAULT),
    boxShadowHover: wrappedBoxShadow(_consts.BUTTON_STATES.HOVER),
    boxShadowActive: wrappedBoxShadow(_consts.BUTTON_STATES.ACTIVE),
    boxShadowFocus: wrappedBoxShadow(_consts.BUTTON_STATES.FOCUS)
  };
  return /*#__PURE__*/React.createElement(_ButtonPrimitive.default, (0, _extends2.default)({
    circled: true,
    contentAlign: "center",
    icons: {
      width: _consts2.ICON_SIZE,
      height: _consts2.ICON_SIZE,
      foreground: selected ? theme.orbit.paletteWhite : theme.orbit.paletteInkNormal
    },
    background: selected ? theme.orbit.paletteBlueNormal : theme.orbit.paletteCloudDark,
    iconLeft: iconLeft,
    height: height,
    width: width,
    disabled: disabled,
    padding: padding
  }, props, boxShadow));
};

var _default = Button;
exports.default = _default;