"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _mediaQuery = _interopRequireDefault(require("../../../utils/mediaQuery"));

var _defaultTheme = _interopRequireDefault(require("../../../defaultTheme"));

const getPadding = ({
  noPadding,
  useMargins,
  theme
}) => {
  if (noPadding) return null;

  if (!useMargins) {
    return (0, _styledComponents.css)(["padding:", ";", ""], theme.orbit.spaceMedium, _mediaQuery.default.largeMobile((0, _styledComponents.css)(["padding:", ";"], theme.orbit.spaceLarge)));
  }

  return (0, _styledComponents.css)(["padding:", " 0;margin:0 ", ";", ""], theme.orbit.spaceMedium, theme.orbit.spaceMedium, _mediaQuery.default.largeMobile((0, _styledComponents.css)(["padding:", " 0;margin:0 ", ";"], theme.orbit.spaceLarge, theme.orbit.spaceLarge)));
};

const StyledTileContent = _styledComponents.default.div.withConfig({
  displayName: "TileContent__StyledTileContent",
  componentId: "sc-1kfck64-0"
})(["", ""], ({
  theme,
  withBorder,
  withPointer
}) => (0, _styledComponents.css)(["font-size:", ";line-height:", ";", ";", ";", ";"], theme.orbit.fontSizeTextNormal, theme.orbit.lineHeightTextNormal, withPointer && (0, _styledComponents.css)(["cursor:pointer;"]), withBorder && (0, _styledComponents.css)(["border-top:1px solid ", ";"], theme.orbit.paletteCloudNormal), getPadding)); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledTileContent.defaultProps = {
  theme: _defaultTheme.default
};
const TileContent = /*#__PURE__*/React.forwardRef(({
  children,
  noPadding,
  withPointer = false,
  withBorder = false,
  useMargins = true
}, ref) => {
  return /*#__PURE__*/React.createElement(StyledTileContent, {
    noPadding: noPadding,
    ref: ref,
    withPointer: withPointer,
    withBorder: withBorder,
    useMargins: useMargins
  }, children);
});
var _default = TileContent;
exports.default = _default;