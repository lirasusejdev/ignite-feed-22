"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BreadcrumbsItem", {
  enumerable: true,
  get: function () {
    return _BreadcrumbsItem.default;
  }
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

var _ChevronLeft = _interopRequireDefault(require("../icons/ChevronLeft"));

var _getSpacingToken = _interopRequireDefault(require("../common/getSpacingToken"));

var _useTranslate = _interopRequireDefault(require("../hooks/useTranslate"));

var _rtl = require("../utils/rtl");

var _TextLink = _interopRequireDefault(require("../TextLink"));

var _Hide = _interopRequireDefault(require("../Hide"));

var _BreadcrumbsItem = _interopRequireDefault(require("./BreadcrumbsItem"));

const StyledBreadcrumbs = _styledComponents.default.nav.withConfig({
  displayName: "Breadcrumbs__StyledBreadcrumbs",
  componentId: "sc-ymjqy4-0"
})(["", ""], ({
  theme
}) => (0, _styledComponents.css)(["font-family:", ";font-size:", ";margin-bottom:", ";"], theme.orbit.fontFamily, theme.orbit.fontSizeTextSmall, _getSpacingToken.default)); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledBreadcrumbs.defaultProps = {
  theme: _defaultTheme.default
};

const StyledBreadcrumbsList = _styledComponents.default.ol.withConfig({
  displayName: "Breadcrumbs__StyledBreadcrumbsList",
  componentId: "sc-ymjqy4-1"
})(["display:flex;flex-wrap:wrap;list-style:none;margin:0;padding:0;"]);

const StyledBackButtonWrapper = _styledComponents.default.span.withConfig({
  displayName: "Breadcrumbs__StyledBackButtonWrapper",
  componentId: "sc-ymjqy4-2"
})(["", ";"], ({
  theme
}) => (0, _styledComponents.css)(["margin-", ":", ";"], _rtl.right, theme.orbit.spaceSmall)); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledBackButtonWrapper.defaultProps = {
  theme: _defaultTheme.default
};

const Breadcrumbs = props => {
  const translate = (0, _useTranslate.default)();
  const {
    children,
    dataTest,
    onGoBack,
    goBackTitle = translate("breadcrumbs_back"),
    spaceAfter,
    backHref,
    id
  } = props;
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Hide.default, {
    on: ["smallMobile", "mediumMobile"]
  }, /*#__PURE__*/React.createElement(StyledBreadcrumbs, {
    "aria-label": "Breadcrumb",
    id: id,
    "data-test": dataTest,
    spaceAfter: spaceAfter
  }, /*#__PURE__*/React.createElement(StyledBreadcrumbsList, {
    itemScope: true,
    itemType: "http://schema.org/BreadcrumbList"
  }, React.Children.map(children, (item, key) => {
    if ( /*#__PURE__*/React.isValidElement(item)) {
      return /*#__PURE__*/React.cloneElement(item, {
        active: key === React.Children.count(children) - 1,
        contentKey: key + 1
      });
    }

    return null;
  })))), /*#__PURE__*/React.createElement(_Hide.default, {
    on: ["largeMobile", "tablet", "desktop", "largeDesktop"]
  }, onGoBack || backHref ? /*#__PURE__*/React.createElement(_TextLink.default, {
    standAlone: true,
    type: "secondary",
    id: id,
    iconLeft: /*#__PURE__*/React.createElement(_ChevronLeft.default, {
      reverseOnRtl: true
    }),
    dataTest: "BreadcrumbsBack",
    onClick: onGoBack,
    href: backHref
  }, goBackTitle) : null));
};

var _default = Breadcrumbs;
exports.default = _default;