"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _consts = require("./consts");

var _TooltipPrimitive = _interopRequireDefault(require("../primitives/TooltipPrimitive"));

var _useMediaQuery = _interopRequireDefault(require("../hooks/useMediaQuery"));

var _MobileDialogPrimitive = _interopRequireDefault(require("../primitives/MobileDialogPrimitive"));

const Tooltip = ({
  children,
  enabled = true,
  tabIndex = "0",
  dataTest,
  size = _consts.SIZE_OPTIONS.SMALL,
  content,
  id,
  placement,
  lockScrolling,
  renderInPortal = true,
  stopPropagation = false,
  removeUnderlinedText,
  block = false
}) => {
  const {
    isLargeMobile
  } = (0, _useMediaQuery.default)();
  return isLargeMobile ? /*#__PURE__*/React.createElement(_TooltipPrimitive.default, {
    dataTest: dataTest,
    id: id,
    tabIndex: tabIndex,
    enabled: enabled,
    content: content,
    size: size,
    renderInPortal: renderInPortal,
    placement: placement,
    stopPropagation: stopPropagation,
    removeUnderlinedText: removeUnderlinedText,
    block: block
  }, children) : /*#__PURE__*/React.createElement(_MobileDialogPrimitive.default, {
    dataTest: dataTest,
    tabIndex: tabIndex,
    id: id,
    enabled: enabled,
    lockScrolling: lockScrolling,
    content: content,
    removeUnderlinedText: removeUnderlinedText,
    stopPropagation: stopPropagation,
    block: block
  }, children);
};

var _default = Tooltip;
exports.default = _default;