"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "TableBody", {
  enumerable: true,
  get: function () {
    return _TableBody.default;
  }
});
Object.defineProperty(exports, "TableCell", {
  enumerable: true,
  get: function () {
    return _TableCell.default;
  }
});
Object.defineProperty(exports, "TableFooter", {
  enumerable: true,
  get: function () {
    return _TableFooter.default;
  }
});
Object.defineProperty(exports, "TableHead", {
  enumerable: true,
  get: function () {
    return _TableHead.default;
  }
});
Object.defineProperty(exports, "TableRow", {
  enumerable: true,
  get: function () {
    return _TableRow.default;
  }
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _TableRow = _interopRequireWildcard(require("./TableRow"));

var _TableCell = _interopRequireWildcard(require("./TableCell"));

var _TableBody = _interopRequireWildcard(require("./TableBody"));

var _consts = _interopRequireDefault(require("./consts"));

var _defaultTheme = _interopRequireDefault(require("../defaultTheme"));

var _TableHead = _interopRequireDefault(require("./TableHead"));

var _TableFooter = _interopRequireDefault(require("./TableFooter"));

const StyledTableOuter = _styledComponents.default.div.withConfig({
  displayName: "Table__StyledTableOuter",
  componentId: "sc-1bxd8er-0"
})(["max-width:100%;width:100%;position:relative;&::after,&::before{content:\" \";display:", ";position:absolute;width:16px;height:100%;top:0;transition:opacity ", " ease-in-out;}&::after{opacity:", ";background-image:", ";right:0;}&::before{opacity:", ";left:0;background-image:", ";}"], ({
  showShadows
}) => showShadows ? "block" : "none", ({
  theme
}) => theme.orbit.durationNormal, ({
  showRight
}) => showRight ? "1" : "0", ({
  theme
}) => theme.orbit.backgroundTableShadowRight, ({
  showLeft
}) => showLeft ? "1" : "0", ({
  theme
}) => theme.orbit.backgroundTableShadowLeft); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledTableOuter.defaultProps = {
  theme: _defaultTheme.default
};

const StyledTableInner = _styledComponents.default.div.withConfig({
  displayName: "Table__StyledTableInner",
  componentId: "sc-1bxd8er-1"
})(["width:100%;", ";"], ({
  showShadows
}) => showShadows && (0, _styledComponents.css)(["overflow-x:auto;-webkit-overflow-scrolling:touch;"]));

const StyledTable = _styledComponents.default.table.withConfig({
  displayName: "Table__StyledTable",
  componentId: "sc-1bxd8er-2"
})(["display:table;border-collapse:collapse;border-spacing:0;width:100%;white-space:nowrap;& ", " > ", "{background-color:", ";border-bottom:1px solid ", ";transition:background-color ", " ease-in-out;", " &:last-child{border:0;}&:hover{background-color:", ";}}& ", "{height:", ";padding:", ";line-height:", ";color:", ";}"], _TableBody.StyledTableBody, _TableRow.StyledTableRow, ({
  theme
}) => theme.orbit.backgroundTable, ({
  theme
}) => theme.orbit.borderColorTable, ({
  theme
}) => theme.orbit.durationFast, ({
  striped,
  theme
}) => striped && (0, _styledComponents.css)(["&:nth-of-type(even){background-color:", ";}"], theme.orbit.backgroundTableEven), ({
  theme
}) => theme.orbit.backgroundTableHover, _TableCell.StyledTableCell, ({
  compact,
  theme
}) => compact ? theme.orbit.spaceXLarge : theme.orbit.spaceXXLarge, ({
  theme,
  compact
}) => compact ? `6px ${theme.orbit.spaceSmall}` : `10px ${theme.orbit.spaceSmall}`, ({
  theme
}) => theme.orbit.lineHeightTextNormal, ({
  type,
  theme
}) => type === _consts.default.SECONDARY && theme.orbit.paletteInkLight); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledTable.defaultProps = {
  theme: _defaultTheme.default
};

const Table = ({
  children,
  striped = true,
  compact = false,
  dataTest,
  id,
  type = _consts.default.PRIMARY
}) => {
  const [shadows, setShadows] = React.useState(false);
  const [right, setRight] = React.useState(false);
  const [left, setLeft] = React.useState(false);
  const outer = React.useRef(null);
  const inner = React.useRef(null);
  const table = React.useRef(null);

  const handleScroll = () => {
    if (shadows && inner && table && outer) {
      var _inner$current, _inner$current2, _outer$current, _table$current;

      setLeft(((_inner$current = inner.current) === null || _inner$current === void 0 ? void 0 : _inner$current.scrollLeft) >= 5);
      setRight(((_inner$current2 = inner.current) === null || _inner$current2 === void 0 ? void 0 : _inner$current2.scrollLeft) + ((_outer$current = outer.current) === null || _outer$current === void 0 ? void 0 : _outer$current.clientWidth) <= ((_table$current = table.current) === null || _table$current === void 0 ? void 0 : _table$current.clientWidth));
    }
  };

  const handleResize = React.useCallback(() => {
    if (table && outer) {
      var _table$current2, _outer$current2;

      const showShadows = ((_table$current2 = table.current) === null || _table$current2 === void 0 ? void 0 : _table$current2.clientWidth) > ((_outer$current2 = outer.current) === null || _outer$current2 === void 0 ? void 0 : _outer$current2.clientWidth);
      setShadows(showShadows);
      setRight(showShadows);
    }
  }, []);
  React.useEffect(() => {
    window.addEventListener("resize", handleResize);
    handleResize();
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, [handleResize]);
  return /*#__PURE__*/React.createElement(StyledTableOuter, {
    ref: outer,
    showShadows: shadows,
    showLeft: left,
    showRight: right,
    "data-test": dataTest,
    id: id
  }, /*#__PURE__*/React.createElement(StyledTableInner, {
    ref: inner,
    onScroll: handleScroll,
    showShadows: shadows
  }, /*#__PURE__*/React.createElement(StyledTable, {
    striped: striped,
    compact: compact,
    type: type,
    ref: table
  }, children)));
};

var _default = Table;
exports.default = _default;