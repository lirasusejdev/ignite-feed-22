"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _defaultTheme = _interopRequireDefault(require("../../defaultTheme"));

var _Button = _interopRequireDefault(require("../../Button"));

var _ButtonLink = _interopRequireDefault(require("../../ButtonLink"));

var _FormLabel = _interopRequireDefault(require("../../FormLabel"));

var _FormFeedback = _interopRequireDefault(require("../FormFeedback"));

var _Attachment = _interopRequireDefault(require("../../icons/Attachment"));

var _CloseCircle = _interopRequireDefault(require("../../icons/CloseCircle"));

var _rtl = require("../../utils/rtl");

var _getSpacingToken = _interopRequireDefault(require("../../common/getSpacingToken"));

var _getFieldDataState = _interopRequireDefault(require("../../common/getFieldDataState"));

var _formElementFocus = _interopRequireDefault(require("../../InputField/helpers/formElementFocus"));

var _mediaQuery = _interopRequireDefault(require("../../utils/mediaQuery"));

const Field = _styledComponents.default.label.withConfig({
  displayName: "InputFile__Field",
  componentId: "sc-hr8l5r-0"
})(["", ""], ({
  theme,
  $width
}) => (0, _styledComponents.css)(["font-family:", ";display:block;position:relative;width:", ";margin-bottom:", ";"], theme.orbit.fontFamily, $width, _getSpacingToken.default)); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


Field.defaultProps = {
  theme: _defaultTheme.default
};
const FakeInput = (0, _styledComponents.default)(({
  children,
  className
}) => /*#__PURE__*/React.createElement("div", {
  className: className
}, children)).withConfig({
  displayName: "InputFile__FakeInput",
  componentId: "sc-hr8l5r-1"
})(["box-sizing:border-box;display:flex;align-items:center;padding:", ";height:", ";box-shadow:inset 0 0 0 ", ";background-color:", ";transition:box-shadow ", " ease-in-out;border-radius:6px;", ";&:hover{box-shadow:inset 0 0 0 ", ";}"], ({
  theme
}) => (0, _rtl.rtlSpacing)(theme.orbit.paddingInputFile), ({
  theme
}) => theme.orbit.heightInputNormal, ({
  theme,
  error
}) => `${theme.orbit.borderWidthInput} ${error ? theme.orbit.borderColorInputError : theme.orbit.borderColorInput}`, ({
  theme
}) => theme.backgroundInput, ({
  theme
}) => theme.orbit.durationFast, _mediaQuery.default.tablet((0, _styledComponents.css)(["border-radius:", ";"], ({
  theme
}) => theme.orbit.borderRadiusNormal)), ({
  theme,
  error
}) => `${theme.orbit.borderWidthInput} ${error ? theme.orbit.paletteRedNormalHover : theme.orbit.borderColorInputHover}`); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198

FakeInput.defaultProps = {
  theme: _defaultTheme.default
};

const Input = _styledComponents.default.input.withConfig({
  displayName: "InputFile__Input",
  componentId: "sc-hr8l5r-2"
})(["opacity:0;position:absolute;height:0;&:focus ~ ", "{", "}"], FakeInput, _formElementFocus.default); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


Input.defaultProps = {
  theme: _defaultTheme.default
};

const getFileInputColor = ({
  error,
  fileName
}, theme) => {
  if (error) {
    return theme.orbit.paletteRedNormal;
  }

  if (fileName) {
    return theme.orbit.colorTextInput;
  }

  return theme.orbit.paletteInkLight;
};

const StyledFileInput = _styledComponents.default.div.withConfig({
  displayName: "InputFile__StyledFileInput",
  componentId: "sc-hr8l5r-3"
})(["font-family:", ";color:", ";width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding:", ";"], ({
  theme
}) => theme.orbit.fontFamily, ({
  error,
  fileName,
  theme
}) => getFileInputColor({
  error,
  fileName
}, theme), ({
  theme
}) => (0, _rtl.rtlSpacing)(`0 0 0 ${theme.orbit.spaceSmall}`)); // $FlowFixMe: https://github.com/flow-typed/flow-typed/issues/3653#issuecomment-568539198


StyledFileInput.defaultProps = {
  theme: _defaultTheme.default
};
const InputFile = /*#__PURE__*/React.forwardRef(({
  placeholder = "No file selected",
  buttonLabel = "Select file",
  onRemoveFile,
  dataTest,
  spaceAfter,
  name,
  error,
  help,
  onChange,
  onFocus,
  onBlur,
  allowedFileTypes,
  tabIndex,
  label,
  fileName
}, ref) => {
  return /*#__PURE__*/React.createElement(Field, {
    spaceAfter: spaceAfter
  }, /*#__PURE__*/React.createElement(Input, {
    "data-test": dataTest,
    "data-state": (0, _getFieldDataState.default)(Boolean(error)),
    type: "file",
    name: name,
    error: error,
    onChange: onChange,
    onFocus: onFocus,
    onBlur: onBlur,
    accept: allowedFileTypes,
    ref: ref,
    tabIndex: tabIndex
  }), label && /*#__PURE__*/React.createElement(_FormLabel.default, {
    filled: Boolean(fileName)
  }, label), /*#__PURE__*/React.createElement(FakeInput, {
    error: error
  }, /*#__PURE__*/React.createElement(_Button.default, {
    type: "secondary",
    role: "button",
    size: "small",
    iconLeft: /*#__PURE__*/React.createElement(_Attachment.default, null),
    asComponent: "div"
  }, buttonLabel), /*#__PURE__*/React.createElement(StyledFileInput, {
    fileName: fileName,
    error: error
  }, fileName || placeholder), fileName && /*#__PURE__*/React.createElement(_ButtonLink.default, {
    type: "primary",
    compact: true,
    iconLeft: /*#__PURE__*/React.createElement(_CloseCircle.default, {
      ariaLabel: "remove",
      color: "secondary"
    }),
    onClick: ev => {
      ev.preventDefault();

      if (onRemoveFile) {
        onRemoveFile();
      }
    }
  })), /*#__PURE__*/React.createElement(_FormFeedback.default, {
    error: error,
    help: help
  }));
});
InputFile.displayName = "InputFile";
var _default = InputFile;
exports.default = _default;